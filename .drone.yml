kind: pipeline
type: docker
name: build-and-deploy

trigger:
  event:
    - push
  branch:
    - main

steps:
  - name: prepare
    image: alpine/git
    commands:
      - git fetch --tags
      - export COMMIT_MSG=$(git log -1 --pretty=%s)
      - |
        echo "Último commit: $COMMIT_MSG"
        echo "$COMMIT_MSG" | grep -Eq '^(feat:|fix:|docs:|hot:|refactor:|test:|ci:|BREAKING CHANGE)' || {
          echo "Commit no válido, saltando..."
          exit 78
        }

  - name: calculate tag
    image: alpine
    environment:
      TAG_FILE: /tmp/tag.txt
    commands:
      - apk add --no-cache curl jq
      - export TAGS_JSON=$(curl -s -u REGISTRY_USER:REGISTRY_PASS "https://gitea-test.mabecenter.org/v2/sierra-group/erpnext/tags/list")
      - export LATEST=$(echo "$TAGS_JSON" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1 || echo "0.0.0.0")
      - |
        echo "Último tag: $LATEST"
      - IFS='.' read -r MAJOR MINOR PATCH REVISION <<EOF
        $LATEST
        EOF
      - case "$COMMIT_MSG" in
          *BREAKING\ CHANGE*) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0; REVISION=0 ;;
          feat:*) MINOR=$((MINOR+1)); PATCH=0; REVISION=0 ;;
          fix:*|hot:*) PATCH=$((PATCH+1)); REVISION=0 ;;
          refactor:*|docs:*|test:*|ci:*|chore:*) REVISION=$((REVISION+1)) ;;
        esac
      - FULL_TAG="${MAJOR}.${MINOR}.${PATCH}.${REVISION}"
      - echo "$FULL_TAG" > $TAG_FILE
      - echo "FULL_TAG=$FULL_TAG" >> $DRONE_ENV

  - name: clone frappe_docker
    image: alpine/git
    commands:
      - git clone --depth 1 https://github.com/frappe/frappe_docker.git

  - name: docker build & push
    image: plugins/docker
    environment:
      APPS_JSON_BASE64:
        from_secret: PLACEHOLDER_IF_REQUIRED  # dummy
    commands:
      - export APPS_JSON_BASE64=$(cat /tmp/apps_base64.txt)
    settings:
      repo: gitea-test.mabecenter.org/sierra-group/erpnext
      registry: gitea-test.mabecenter.org
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASS
      dockerfile: frappe_docker/images/layered/Containerfile
      context: .
      tags:
        - ${FULL_TAG}
      build_args:
        - FRAPPE_PATH=https://github.com/frappe/frappe
        - FRAPPE_BRANCH=version-15
        - APPS_JSON_BASE64=${APPS_JSON_BASE64}
